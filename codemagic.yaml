workflows:
  android-workflow:
    name: Thazh Explore Android Build
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      android_signing:
        - keystore_reference
      groups:
        - google_play # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS)
      vars:
        PACKAGE_NAME: "com.thazhexplore" # <-- Put your package name here
        GOOGLE_PLAY_TRACK: alpha # <-- Any default value that will be overridden
      node: 18.17.0
      java: 17
      xcode: latest
      cocoapods: default
    scripts:
      - name: Install dependencies
        script: |
          npm install
      
      - name: Setup Android environment
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
          
      - name: Fix Gradle compatibility
        script: |
          # Force Gradle 8.3 for React Native 0.72 compatibility
          cat > android/gradle/wrapper/gradle-wrapper.properties << 'EOF'
          distributionBase=GRADLE_USER_HOME
          distributionPath=wrapper/dists
          distributionUrl=https\://services.gradle.org/distributions/gradle-8.3-bin.zip
          networkTimeout=10000
          zipStoreBase=GRADLE_USER_HOME
          zipStorePath=wrapper/dists
          EOF
          
          # Fix settings.gradle
          cat > android/settings.gradle << 'EOF'
          pluginManagement {
              repositories {
                  gradlePluginPortal()
                  google()
                  mavenCentral()
              }
          }

          dependencyResolutionManagement {
              repositoriesMode.set(RepositoriesMode.PREFER_PROJECT)
              repositories {
                  google()
                  mavenCentral()
                  maven { url 'https://www.jitpack.io' }
              }
          }

          rootProject.name = 'ThazhExplore'
          apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesSettingsGradle(settings)
          include ':app'
          EOF
          
      - name: Generate keystore for signing
        script: |
          # Generate a keystore for signing (for demo purposes)
          # In production, you should use Codemagic's keystore management
          keytool -genkeypair -v -storetype PKCS12 -keystore android/app/release.keystore \
            -alias release -keyalg RSA -keysize 2048 -validity 10000 \
            -storepass android -keypass android \
            -dname "CN=Thazh Explore, OU=Mobile, O=Thazh, L=Vietnam, S=Vietnam, C=VN"
          
          # Setup gradle.properties for signing
          echo "MYAPP_RELEASE_STORE_FILE=release.keystore" >> android/gradle.properties
          echo "MYAPP_RELEASE_KEY_ALIAS=release" >> android/gradle.properties
          echo "MYAPP_RELEASE_STORE_PASSWORD=android" >> android/gradle.properties
          echo "MYAPP_RELEASE_KEY_PASSWORD=android" >> android/gradle.properties
          
      - name: Build Android APK
        script: |
          cd android
          chmod +x gradlew
          ./gradlew assembleRelease --no-daemon --stacktrace
          
      - name: Build Android App Bundle (AAB)
        script: |
          cd android
          ./gradlew bundleRelease --no-daemon --stacktrace
          
    artifacts:
      - android/app/build/outputs/**/*.apk
      - android/app/build/outputs/**/*.aab
      - android/app/build/outputs/**/mapping.txt
      
    publishing:
      email:
        recipients:
          - developer@example.com # <-- Put your email here
        notify:
          success: true
          failure: true
      slack:
        channel: '#builds' # <-- Put your Slack channel here
        notify_on_build_start: true
        notify:
          success: true
          failure: true
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: $GOOGLE_PLAY_TRACK
        submit_as_draft: true

  ios-workflow:
    name: Thazh Explore iOS Build
    max_build_duration: 120
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: codemagic # <-- Put your App Store Connect integration name here
    environment:
      ios_signing:
        distribution_type: app_store # or: ad_hoc | development | enterprise
        bundle_identifier: com.thazhexplore
      vars:
        XCODE_WORKSPACE: "ios/ThazhExplore.xcworkspace"
        XCODE_SCHEME: "ThazhExplore"
        BUNDLE_ID: "com.thazhexplore" # <-- Put your bundle id here
        APP_STORE_CONNECT_ISSUER_ID: # <-- Put your App Store Connect Issuer Id here
        APP_STORE_CONNECT_KEY_IDENTIFIER: # <-- Put your App Store Connect Key Identifier here
        APP_STORE_CONNECT_PRIVATE_KEY: # <-- Put your App Store Connect Private Key here
        CERTIFICATE_PRIVATE_KEY: # <-- Put your Certificate Private Key here
      node: 18.17.0
      xcode: latest
      cocoapods: default
    scripts:
      - name: Install dependencies
        script: |
          npm install
          
      - name: Install CocoaPods dependencies
        script: |
          cd ios && pod install
          
      - name: Set up keychain to be used for codesigning
        script: |
          keychain initialize
          
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_STORE --create
          
      - name: Use system default keychain
        script: |
          keychain add-certificates
          
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
          
      - name: Build iOS App
        script: |
          xcode-project build-ipa \
            --workspace "$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME"
            
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
      
    publishing:
      email:
        recipients:
          - admin@thazh.is-a.dev # <-- Put your email here
        notify:
          success: true
          failure: true
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        beta_groups: # Specify the names of beta tester groups that will get access to the build once it has passed beta review.
          - group name 1
          - group name 2

  react-native-test:
    name: React Native Tests
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      node: 18.17.0
      java: 17
    scripts:
      - name: Install dependencies
        script: |
          npm install
          
      - name: Run ESLint
        script: |
          npm run lint
          
      - name: Run tests
        script: |
          npm test -- --coverage --watchAll=false
          
      - name: Type check
        script: |
          npx tsc --noEmit
          
    artifacts:
      - coverage/**/*
      
    publishing:
      email:
        recipients:
          - admin@thazh.is-a.de
        notify:
          success: false
          failure: true