workflows:
  android-workflow:
    name: Thazh Explore Android Build
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      groups:
        - google_play # <-- (Optional: Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS)
      vars:
        PACKAGE_NAME: "com.thazhexplore"
        GOOGLE_PLAY_TRACK: "internal" # internal, alpha, beta, production
      node: 18.17.0
      java: 17
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: 'main'
          include: true
          source: true
        - pattern: 'develop'
          include: true
          source: true
    scripts:
      - name: Install dependencies
        script: |
          npm install
      
      - name: Setup Android environment
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
          
      - name: Fix Gradle compatibility for React Native 0.72
        script: |
          # Force Gradle 8.3 for React Native 0.72 compatibility
          cat > android/gradle/wrapper/gradle-wrapper.properties << 'EOF'
          distributionBase=GRADLE_USER_HOME
          distributionPath=wrapper/dists
          distributionUrl=https\://services.gradle.org/distributions/gradle-8.3-bin.zip
          networkTimeout=10000
          zipStoreBase=GRADLE_USER_HOME
          zipStorePath=wrapper/dists
          EOF
          
          # Fix settings.gradle to remove problematic plugins
          cat > android/settings.gradle << 'EOF'
          pluginManagement {
              repositories {
                  gradlePluginPortal()
                  google()
                  mavenCentral()
              }
          }

          dependencyResolutionManagement {
              repositoriesMode.set(RepositoriesMode.PREFER_PROJECT)
              repositories {
                  google()
                  mavenCentral()
                  maven { url 'https://www.jitpack.io' }
              }
          }

          rootProject.name = 'ThazhExplore'
          apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesSettingsGradle(settings)
          include ':app'
          EOF
          
          echo "✅ Gradle files configured successfully"
          
      - name: Generate release keystore
        script: |
          # Generate keystore for signing APK
          keytool -genkeypair -v -storetype PKCS12 -keystore android/app/release.keystore \
            -alias release -keyalg RSA -keysize 2048 -validity 10000 \
            -storepass thazh2024 -keypass thazh2024 \
            -dname "CN=Thazh Explore Browser, OU=Mobile Development, O=Thazh Team, L=Ho Chi Minh City, S=Ho Chi Minh, C=VN"
          
          # Setup gradle.properties for signing
          cat >> android/gradle.properties << EOF
          MYAPP_RELEASE_STORE_FILE=release.keystore
          MYAPP_RELEASE_KEY_ALIAS=release
          MYAPP_RELEASE_STORE_PASSWORD=thazh2024
          MYAPP_RELEASE_KEY_PASSWORD=thazh2024
          EOF
          
          echo "✅ Keystore generated and configured"
          
      - name: Build Android APK
        script: |
          cd android
          chmod +x gradlew
          echo "🚀 Starting APK build..."
          ./gradlew assembleRelease --no-daemon --stacktrace
          echo "✅ APK build completed successfully!"
          
      - name: Build Android App Bundle (AAB)
        script: |
          cd android
          echo "🚀 Starting AAB build..."
          ./gradlew bundleRelease --no-daemon --stacktrace
          echo "✅ AAB build completed successfully!"
          
      - name: Verify build outputs
        script: |
          echo "📁 Build outputs:"
          find android/app/build/outputs -name "*.apk" -o -name "*.aab" | head -10
          
          APK_PATH=$(find android/app/build/outputs -name "*.apk" | head -1)
          if [ -f "$APK_PATH" ]; then
            APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
            echo "✅ APK created: $APK_PATH ($APK_SIZE)"
          else
            echo "❌ APK not found!"
            exit 1
          fi
          
    artifacts:
      - android/app/build/outputs/**/*.apk
      - android/app/build/outputs/**/*.aab
      - android/app/build/outputs/**/mapping.txt
      
    publishing:
      email:
        recipients:
          - admin@thazh.is-a.dev # <-- Replace with your email
        notify:
          success: true
          failure: true
      # slack:
      #   channel: '#builds'
      #   notify_on_build_start: true
      #   notify:
      #     success: true
      #     failure: true
      # google_play:
      #   credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
      #   track: $GOOGLE_PLAY_TRACK
      #   submit_as_draft: true

  react-native-test:
    name: React Native Code Quality
    max_build_duration: 60
    instance_type: linux_x2
    environment:
      node: 18.17.0
    triggering:
      events:
        - push
        - pull_request
      branch_patterns:
        - pattern: '*'
          include: true
    scripts:
      - name: Install dependencies
        script: |
          npm install
          
      - name: Run ESLint
        script: |
          echo "🔍 Running ESLint..."
          npm run lint || echo "⚠️ ESLint found issues (non-blocking)"
          
      - name: TypeScript type check
        script: |
          echo "🔍 Running TypeScript check..."
          npx tsc --noEmit || echo "⚠️ TypeScript errors found (non-blocking)"
          
      - name: Run tests
        script: |
          echo "🧪 Running tests..."
          npm test -- --coverage --watchAll=false || echo "⚠️ Tests failed (non-blocking)"
          
    artifacts:
      - coverage/**/*
      
    publishing:
      email:
        recipients:
          - admin@thazh.is-a.dev
        notify:
          success: false
          failure: true